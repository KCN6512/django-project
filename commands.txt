просмотр SQL-запроса: python manage.py sqlmigrate women 0001
запуск сервера py manage.py runserver
manage.py srartproject *name*
manage.py startapp *appname*
manage.py makemigrations
manage.py migrate
manage.py shell интеркативаня среда django

object.save() сохранить в бд
object.pk = object.id #pk = id number




#interactive shell commands
from django.db import connection
connection.queries список словарей выполненных sql запросов
ClassDb.objects.all() все записи ограничено до 21
ClassDb.objects.save() сохранить в бд
ClassDb.objects.delete() удалить из бд

__gte сравнение больше или равно
__lte сравнение меньше или равно

Women.objects.filter(pk=2)  ряд с  id 2    возвращает QuerySet (состоящий из одного экземпляра записи)
Women.objects.filter(pk__gte=2)  ряд у которого id больше или равно 2
Women.objects.exclude(=2)  ряд где id не равно 2
Women.objects.get(pk=2) ряд у которого id 2 НО ЕСЛИ ВЕРНЕТСЯ БОЛЬШЕ 1 ИЛИ МЕНЬШЕ 1 ЗАПИСИ ВЕРНЕТ ОШИБКУ       возвращает непосредственно экземпляр записи
Women.objects.filter(pk__lte=5).order_by('title') order_by сортирует query set по аргументу 
Women.objects.order_by('-time_update') сортировка в оббратном порядке 






#jinja commands
{% for i in cities -%} цикл for с переносом строки выводит все через строку,минус перед закрывающим%и скобкой} позволяет убрать лишний пустые строки
